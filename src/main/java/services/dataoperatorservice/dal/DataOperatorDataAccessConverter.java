package services.dataoperatorservice.dal;

import commonobjects.DataOperatorRequestQuery;
import commonobjects.DataOperatorResponseQuery;
import services.dataoperatorservice.bll.bo.*;
import services.dataoperatorservice.dal.dao.*;

public interface DataOperatorDataAccessConverter {
    CampaignIdAndPlayerIdAndAPINameAndQueryTypeAndRequestJsonDao getCampaignIdAndPlayerIdAndAPINameAndQueryTypeAndRequestJsonDaoFromCampaignIdAndPlayerIdAndAPINameAndQueryTypeAndRequestJsonBo(CampaignIdAndPlayerIdAndAPINameAndQueryTypeAndRequestJsonBo campaignIdAndPlayerIdAndAPINameAndQueryTypeAndRequestJsonBo);

    QueryIdAndResponseJsonDao getQueryIdAndResponseJsonDaoFromQueryIdAndResponseJsonBo(QueryIdAndResponseJsonBo queryIdAndResponseJsonBo);

    PlayerIdDao getPlayerIdDaoFromPlayerBo(PlayerBo playerBo);

    DungeonMasterIdDao getDungeonMasterIdDaoFromDungeonMasterBo(DungeonMasterBo dungeonMasterBo);

    QueryIdAndResponseJsonBo getQueryIdAndResponseJsonBoFromQueryIdAndResponseJsonDao(QueryIdAndResponseJsonDao queryIdAndResponseJsonDao);

    PortCampaignMapBo getPortCampaignMapBoFromPortCampaignMapDao(PortCampaignMapDao portCampaignMapDao);

    CampaignBo getCampaignBoFromCampaignDao(CampaignDao campaignDao);

    PortBo getPortBoFromPortDao(PortDao portDao);

    DataOperatorRequestQuery getDataOperatorRequestQueryFromCampaignIdAndPlayerIdAndAPINameAndQueryTypeAndRequestJsonDao(CampaignIdAndPlayerIdAndAPINameAndQueryTypeAndRequestJsonDao campaignIdAndPlayerIdAndAPINameAndQueryTypeAndRequestJsonDao);

    DataOperatorRequestQuery getDataOperatorRequestQueryFromPlayerIdDao(PlayerIdDao playerIdDao);

    DataOperatorRequestQuery getDataOperatorRequestQueryFromDungeonMasterIdDao(DungeonMasterIdDao dungeonMasterIdDao);

    DataOperatorResponseQuery getDataOperatorResponseQueryFromQueryIdAndResponseJsonDao(QueryIdAndResponseJsonDao queryIdAndResponseJsonDao);

    QueryIdAndResponseJsonDao getQueryIdAndResponseJsonDaoFromDataOperatorResponseQuery(DataOperatorResponseQuery dataOperatorResponseQuery);

    CampaignDao getCampaignDaoFromDataOperatorResponseQuery(DataOperatorResponseQuery dataOperatorResponseQuery);

    PortDao getPortDaoFromPort(int port);
}